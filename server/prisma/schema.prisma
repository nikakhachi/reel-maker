generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                          Int                @id @default(autoincrement())
  createdAt                   DateTime           @default(now())
  updatedAt                   DateTime           @updatedAt 
  username                    String
  email                       String
  password                    String
  isProcessing                Boolean            @default(false)
  subscriptionId              Int
  subscriptionActivationDate  DateTime
  secondsTranscripted         Int                @default(0)
  subscription                Subscription       @relation(fields: [subscriptionId],references: [id])
  videos                      YoutubeVideo[]
  subscriptionHistory         SubscriptionHistory[]
}

model SubscriptionHistory {
  id                    Int               @id @default(autoincrement())
  activationDate        DateTime
  secondsTranscripted   Int         
  userId                Int
  user                  User              @relation(fields: [userId], references: [id])
  subscriptionId        Int
  subscription          Subscription      @relation(fields: [subscriptionId],references: [id])
}

model Subscription {
  id                    Int               @id @default(autoincrement())
  priceInDollars        Float
  durationInDays        Int
  transcriptionSeconds  Int
  title                 String
  activeUsers           User[]
  subscriptionHistories SubscriptionHistory[]
  isActive              Boolean
}

model YoutubeVideo {
  id                Int               @id @default(autoincrement())
  createdAt         DateTime          @default(now())
  videoId           String
  userId            Int
  user              User              @relation(fields: [userId], references: [id])
  statusId          Int
  status            Status            @relation(fields: [statusId], references: [id])
  clips             Clip[]
  shorts            Short[]
}

model Status {
  id              Int                 @id @default(autoincrement())
  name            String
  youtubeVideos   YoutubeVideo[]
}

model Clip {
  id                        Int                     @id @default(autoincrement())
  createdAt                 DateTime                @default(now())
  videoUrl                  String
  subtitlesUrl              String
  gist                      String
  headline                  String
  summary                   String
  youtubeVideoDatabaseId    Int
  youtubeVideo              YoutubeVideo            @relation(fields: [youtubeVideoDatabaseId], references: [id])
}

model Short {
  id                        Int                      @id @default(autoincrement())
  createdAt                 DateTime                 @default(now())
  videoUrl                  String
  subtitlesUrl              String
  text                      String
  label                     String
  youtubeVideoDatabaseId    Int
  youtubeVideo              YoutubeVideo            @relation(fields: [youtubeVideoDatabaseId], references: [id])
}