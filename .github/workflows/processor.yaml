# name: Deploy to ECR

# on:
#   push:
#     branches:
#       - master
#     paths:
#       - "processor/**"

# jobs:
#   build:
#     name: Build Image
#     runs-on: ubuntu-latest

#     steps:
#       - name: Check out code
#         uses: actions/checkout@v2

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: eu-west-1

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: Build, tag, and push image to Amazon ECR
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           PROCESSOR_ECR_REPOSITORY_NAME: ${{ secrets.PROCESSOR_ECR_REPOSITORY_NAME }}
#         run: |
#           docker build -t $ECR_REGISTRY/$PROCESSOR_ECR_REPOSITORY_NAME:latest ./processor
#           docker push $ECR_REGISTRY/$PROCESSOR_ECR_REPOSITORY_NAME:latest

#       # - name: Download task definition
#       #   run: |
#       #     aws ecs describe-task-definition --task-definition ECSReelMakerServerTask --query taskDefinition > task-definition.json

#       # - name: Fill in the new image ID in the Amazon ECS task definition
#       #   id: task-def
#       #   uses: aws-actions/amazon-ecs-render-task-definition@v1
#       #   with:
#       #     task-definition: task-definition.json
#       #     container-name: Reel-Maker-Server-Container
#       #     image: $ECR_REGISTRY/$PROCESSOR_ECR_REPOSITORY_NAME:latest

#       # - name: Deploy Amazon ECS task definition
#       #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#       #   with:
#       #     task-definition: ${{ steps.task-def.outputs.task-definition }}
#       #     # service: my-service
#       #     cluster: Reel-Maker
#       #     wait-for-service-stability: true
